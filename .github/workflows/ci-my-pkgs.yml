# Run from CLI:
# gh workflow run 'Build Nix Packages' --repo austinbutler/nixpkgs --field git_ref=72af269544659f70b70cf5d837df21650270f9cd --field packages=python3Packages.awslambdaric --field os=ubuntu-latest
# Test locally
# DOCKER_HOST="unix://$XDG_RUNTIME_DIR/podman/podman.sock" act --workflows .github/workflows/ci-my-pkgs.yml --container-daemon-socket "$DOCKER_HOST" --input git_ref=43dd9f2593e6269db4607f0615edb604e10fda47 --input packages='python3Packages.awslambdaric' --input os=ubuntu-latest

name: Build Nix Packages

on:
  workflow_dispatch:
    inputs:
      git_ref:
        description: Git commit or branch
        required: true
      packages:
        description: Packages to build, space separated
        required: true
      check:
        description: Add "--check"
        type: choice
        required: false
        default: false
        options:
          - "false"
          - "true"
      os:
        description: Operating system
        required: true
        type: choice
        options:
          # https://github.com/actions/runner-images
          - macos-latest # aarch64
          - macos-13 # Last free x86_64 macOS version
          - ubuntu-latest # x86_64
          # https://github.com/actions/partner-runner-images
          - ubuntu-24.04-arm # aarch64
          # ubuntu-latest-arm doesn't exist?
          # https://github.com/actions/partner-runner-images/issues/118
jobs:
  parse-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Parse packages
        id: parse-packages
        run: |
          PACKAGES=$(printf %s "${{ github.event.inputs.packages }}" | jq -cRs 'split(" ")')
          echo "Building the following packages on ${{ github.event.inputs.os }}: $PACKAGES"
          echo "packages=${PACKAGES}" >> $GITHUB_OUTPUT
    outputs:
      packages: ${{ steps.parse-packages.outputs.packages }}
  build:
    runs-on: ${{ github.event.inputs.os }}
    needs:
      - parse-inputs
    strategy:
      matrix:
        package: ${{ fromJSON(needs.parse-inputs.outputs.packages) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.git_ref }}
      - uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v16
        if: ${{ !env.ACT }}
        with:
          name: austinbutler
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Show kernel info
        run: uname -a
      - name: Build package
        run: NIXPKGS_ALLOW_BROKEN=1 NIXPKGS_ALLOW_UNSUPPORTED_SYSTEM=1 nix build --impure .#${{ matrix.package }} $([[ "${{ github.event.inputs.check }}" == "true" ]] && printf %s '--check') --log-format raw-with-logs
      # - name: Show logs
      #   if: failure()
      #   run: nix log .#${{ matrix.package }} $([[ "${{ github.event.inputs.check }}" == "true" ]] && printf %s '--check')
